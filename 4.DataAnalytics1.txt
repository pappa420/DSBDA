import pandas as pd					//Import Pandas Package:
import numpy as np

from sklearn.datasets import load_boston
boston_dataset = load_boston()

boston = pd.DataFrame(boston_dataset.data, columns=boston_dataset.feature_names)
boston.head()

boston['MEDV'] = boston_dataset.target

boston.isnull().sum()

#Transform the data set into a data frame:

X = pd.DataFrame(np.c_[boston['LSTAT'], boston['RM']], columns = ['LSTAT','RM'])
Y = boston['MEDV']

from sklearn.linear_model import LinearRegression

#Initialize the linear regression model

reg = LinearRegression()


#We have to split the dependent variables (x) and the target or independent variable (y)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.33, random_state=42)
reg.fit(x_train, y_train)

#print our price predictions on our test data

y_pred = reg.predict(x_test)


#Print the the prediction for the third row of our test data actual price

y_pred[2]
y_test[0]
print(y_pred)


print(np.mean((y_pred-y_test)**2))   			//by numpy

from sklearn.metrics import mean_squared_error 		//by sklearn
print(mean_squared_error(y_test, y_pred))



Theory:
What is linear Regression?
Linear Regression is the supervised Machine Learning model in which the model finds the best
fit linear line between the independent and dependent variable i.e it finds the linear relationship
between the dependent and independent variable.